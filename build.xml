<project name="Ser321 Spring 2020 Assign6, akclifto (akclifto@asu.edu)" default="targets" basedir=".">

    <!-- define tasks used in the prepare task for platform identification -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>


    <!-- set global properties for this build -->
    <property name="src" value="./src"/>
    <property name="build" value="./classes"/>
    <property name="docs" value="./docs"/>
    <property name="lib" value="./lib"/>
    <property name="userId" value="akclifto"/>
    <property name="omdbkey" value="your-omdb-api-key"/>
    <property name="parentDir" value="${user.dir}${file.separator}"/>
    <property name="javafxhome" value="javafx-sdk-13.0.1/"/>
    <property name="javafx-lib-home" value="${javafxhome}lib"/>
    <property name="hostId" value="localhost"/>
    <property name="regPort" value="8888"/>


    <path id="compile.classpath">
        <pathelement location="${build}"/>
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${basedir}/${javafx-lib-home}">
            <include name="javafx.graphics.jar"/>
            <include name="javafx.base.jar"/>
            <include name="javafx.media.jar"/>
            <include name="javafx.swing.jar"/>
            <include name="javafx.controls.jar"/>
            <include name="javafx.web.jar"/>
            <include name="javafx.swt.jar"/>
            <include name="javafx.fxml.jar"/>
            <include name="javafx.controls.jar"/>
        </fileset>
    </path>


    <!-- Ant Targets-->
    <target name="targets">
        <echo message="targets are clean, prepare, setup.javafx, compile, server, and client. "/>
        <echo message="start server with: ant server -DregPort=8888"/>
        <echo message="start client 1 with: ant client -DhostId=localhost -DregPort=8888 -DuserId=green -Domdbkey=YourOMDBkey"/>
        <echo message="start client 2 with: ant client -DhostId=localhost -DregPort=8888 -DuserId=orange -Domdbkey=YourOMDBkey"/>
    </target>


    <!-- Clean Project -->
    <target name="clean">
        <!-- Delete the ${build} and ${docs} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${javafxhome}"/>
    </target>


    <!-- Prepare Project-->
    <target name="prepare" depends="clean" > <!--TODO: -->
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <echo message="home defined as: ${user.home}"/>
        <mkdir dir="${build}"/>
        <!-- Platform identification -->
        <condition property="build.host.islinux">
            <and>
                <os family="unix"/>
                <not>
                    <contains string="${os.name}" substring="mac"
                              casesensitive="false"/>
                </not>
            </and>
        </condition>
        <condition property="build.host.platform" value="linux">
            <isset property="build.host.islinux"/>
        </condition>

        <condition property="build.host.ismac">
            <and>
                <os family="unix"/>
                <contains string="${os.name}" substring="mac" casesensitive="false"/>
            </and>
        </condition>
        <condition property="build.host.platform" value="mac">
            <isset property="build.host.ismac"/>
        </condition>

        <fail unless="build.host.platform"
              message="Building on ${os.name} is not supported"/>
        <echo message="build.host.platform is: ${build.host.platform}"/>
    </target>


    <!-- Setup javaFX -->
    <target name="setup.javafx" depends="prepare">
        <if>
            <isset property="build.host.ismac"/>
            <then>
                <echo message="detected property ismac is set"/>
                <unzip src="${basedir}/openjfx-13.0.1_osx-x64_bin-sdk.zip" dest="${basedir}"/>
            </then>
            <elseif>
                <isset property="build.host.islinux"/>
                <then>
                    <echo message="detected property islinux is set"/>
                    <unzip src="${basedir}/openjfx-13.0.1_linux-x64_bin-sdk.zip" dest="${basedir}"/>
                </then>
            </elseif>
            <else>
                <echo message="failed to detect a host I know how to build on"/>
            </else>
        </if>
    </target>


    <!-- Compile Project -->
    <target name="compile" depends="setup.javafx"
            description="Compile Java sources">
        <javac srcdir="${src}"
               includeantruntime="false"
               destdir="${build}">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>


    <!-- Build/Initiate Server -->
    <target name="server" depends="compile" description="Start server">
                <echo message="command line server: java -cp classes:lib/json.jar LibraryTCPJsonRPCServer ${regPort}"/>
                <java classname="ser321.assign6.akclifto.server.LibraryTCPJsonRPCServer" fork="yes">
                    <arg value="${regPort}"/>
                    <classpath refid="compile.classpath"/>
                </java>
    </target>


    <!-- Build/Initiate Client -->
    <target name="client" depends="compile" description="Start client">
        <echo message="user.dir is: ${user.dir}"/>
        <echo message="command line client: java -cp classes:lib/assign2Gui.jar SeriesSeasonRMIClient ${hostId} ${regPort} ${omdbkey}"/>
        <java classname="ser321.assign6.akclifto.client.SeriesSeasonRMIClient" fork="yes">
            <classpath refid="compile.classpath"/>
            <arg value="${hostId}"/>
            <arg value="${regPort}"/>
            <arg value="${omdbkey}"/>
            <arg value="${userId}"/>
        </java>
    </target>
    
</project>
